#!/usr/bin/env php
<?php

use GuzzleHttp\Client;
use Rekhyt\PhpDependencyChecker\Vulnerability\Repository\SLApi\Vulnerability;
use Rekhyt\PhpDependencyChecker\Vulnerability\Repository\SLApi\VulnerabilityFiltered;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\ApiEndpoint;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\ComposerLockFileContents;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\PackageName;

$packageExceptionList = getPackageExceptionList($argv);


$repository = new Vulnerability(new Client(), new ApiEndpoint('https://security.sensiolabs.org/check_lock'));
if ((!empty($packageExceptionList))) {
    $repository = new VulnerabilityFiltered(
        $repository,
        new Rekhyt\PhpDependencyChecker\Vulnerability\Filter\VulnerabilityListFilterPackageExceptionList(
            $packageExceptionList
        )
    );
}

$vulnerabilities = $repository->getAllByComposerLockFileContents(getComposerLockFileContents($argv));

/**
 * @param array $argv
 *
 * @return ComposerLockFileContents
 */
function getComposerLockFileContents(array $argv)
{
    return new ComposerLockFileContents('');
}

/**
 * @param array $argv
 *
 * @return PackageName[]
 */
function getPackageExceptionList(array $argv)
{
    return [];
}