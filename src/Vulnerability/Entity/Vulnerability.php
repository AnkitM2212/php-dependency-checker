<?php
/**
 * Copyright (c) 2017 Timo Ebel
 *
 * This work is licensed under the terms of the MIT license.
 * For a copy, see <https://opensource.org/licenses/MIT> or the LICENSE file included in this project.
 */

namespace Rekhyt\PhpDependencyChecker\Vulnerability\Entity;


use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\PackageName;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\PackageVersion;

class Vulnerability
{
    /** @var PackageName */
    private $packageName;

    /** @var PackageVersion */
    private $packageVersion;

    /** @var Advisory[] */
    private $advisories;

    /**
     * @param PackageName    $packageName
     * @param PackageVersion $packageVersion
     * @param Advisory[]     $advisories
     */
    public function __construct(PackageName $packageName, PackageVersion $packageVersion, array $advisories)
    {
        $this->packageName    = $packageName;
        $this->packageVersion = $packageVersion;
        $this->advisories     = $advisories;
    }

    /**
     * @return PackageName
     */
    public function getPackageName()
    {
        return $this->packageName;
    }

    /**
     * @return PackageVersion
     */
    public function getPackageVersion()
    {
        return $this->packageVersion;
    }

    /**
     * @return Advisory[]
     */
    public function getAdvisories()
    {
        return $this->advisories;
    }

    public function __toString()
    {
        $vulnerabilityLabel = (count($this->advisories) > 1)
            ? 'Vulnerabilities'
            : 'Vulnerability';

        $title =
            "{$vulnerabilityLabel} found in {$this->packageName}, version " .
            "{$this->packageVersion}:";

        $title .= "\n" . str_repeat('-', strlen($title)) . "\n\n";

        return $title . implode("\n\n", $this->advisories);
    }
}