<?php

namespace Rekhyt\PhpDependencyChecker\Vulnerability\Repository\SLApi;


use Rekhyt\PhpDependencyChecker\Vulnerability\Entity\Vulnerability as VulnerabilityEntity;
use Rekhyt\PhpDependencyChecker\Vulnerability\Filter\VulnerabilityListFilter;
use Rekhyt\PhpDependencyChecker\Vulnerability\Repository\Provider\Vulnerability;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\ComposerLockFileContents;

class VulnerabilityFiltered implements Vulnerability
{
    /** @var Vulnerability */
    private $vulnerabilityProvider;

    /** @var VulnerabilityListFilter */
    private $filterChain;

    /**
     * @param Vulnerability           $vulnerabilityProvider
     * @param VulnerabilityListFilter $filterChain
     */
    public function __construct(Vulnerability $vulnerabilityProvider, VulnerabilityListFilter $filterChain)
    {
        $this->vulnerabilityProvider = $vulnerabilityProvider;
        $this->filterChain           = $filterChain;
    }

    /**
     * @param ComposerLockFileContents $lockFileContents
     *
     * @return VulnerabilityEntity[]
     */
    public function getAllByComposerLockFileContents(ComposerLockFileContents $lockFileContents)
    {
        // TODO: Implement getAllByComposerLockFileContents() method.
    }
}